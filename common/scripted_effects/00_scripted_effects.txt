#	Example:
#
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

#####################################
### emergency_factory_conversion ####
#####################################

#This is going to give misleading and ugly tooltips. Making it nice will take effort. TODO_WTT_CD make nice or ignore and remove comment. Easiest solution is just making a custom tooltip that says "5 civilian factories will be converted to military factories" and ignore telling the player the states where it will happen.

replace_civ_with_arms_factories = {

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_everything }
		}
	}
}

print_variable_log_effect = {
	print_variables = {
		file = variables_yug
		append = yes
	}
}

clear_sabotaged_resources_if_necesary = {
	if = {
		limit = {
			not = {
				has_dynamic_modifier = {
					modifier = sabotaged_resources
				}
			}
		}

		clear_variable = sabotaged_oil
		clear_variable = sabotaged_aluminium
		clear_variable = sabotaged_rubber
		clear_variable = sabotaged_tungsten
		clear_variable = sabotaged_steel
		clear_variable = sabotaged_chromium
	}
}

upgrade_economy_law = {
	if = {
		limit = {
			has_idea = civilian_economy
		}
		add_ideas = low_economic_mobilisation
	}
	else_if = {
		limit = {
			has_idea = low_economic_mobilisation
		}
		add_ideas = partial_economic_mobilisation
	}
	else_if = {
		limit = {
			has_idea = partial_economic_mobilisation
		}
		add_ideas = war_economy
	}
	else_if = {
		limit = {
			has_idea = war_economy
		}
		add_ideas = tot_economic_mobilisation
	}
	else = {
		add_political_power = 150
	}
}

bba_create_cas_license_effect = { #this assumes that the corresponding get_cas_effect has run already to generate a design template if necessary
	if = {
		limit = {
			has_tech = advanced_small_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = small_plane_cas_airframe_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_small_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = small_plane_cas_airframe_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = basic_small_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = small_plane_cas_airframe_1
			}
			cost_factor = 0
		}
	}
}

bba_create_fighter_license_effect = { #this assumes that the corresponding get_fighter_effect has run already to generate a design template if necessary
	if = {
		limit = {
			has_tech = advanced_small_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = small_plane_airframe_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_small_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = small_plane_airframe_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = basic_small_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = small_plane_airframe_1
			}
			cost_factor = 0
		}
	}
}

bba_create_tac_license_effect = { #this assumes that the corresponding get_tac_effect has run already to generate a design template if necessary
	if = {
		limit = {
			has_tech = advanced_medium_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = medium_plane_airframe_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_medium_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = medium_plane_airframe_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = basic_medium_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = medium_plane_airframe_1
			}
			cost_factor = 0
		}
	}
}

bba_create_heavy_fighter_license_effect = { #this assumes that the corresponding get_fighter_effect has run already to generate a design template if necessary
	if = {
		limit = {
			has_tech = advanced_medium_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = medium_plane_fighter_airframe_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_medium_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = medium_plane_fighter_airframe_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = basic_medium_airframe
		}
		create_production_license = {
			target = event_target:license_target
			equipment = {
				type = medium_plane_fighter_airframe_1
			}
			cost_factor = 0
		}
	}
}

remove_any_country_role_from_character = { #Expected to be used inside the character scope
	#log = "I am [THIS.GetName]"
	if = {
		limit = {
			is_character_slot = air_chief
		}
		remove_advisor_role = { slot = air_chief }
	}
	if = {
		limit = {
			is_character_slot = army_chief
		}
		remove_advisor_role = { slot = army_chief }
	}
	if = {
		limit = {
			is_character_slot = navy_chief
		}
		remove_advisor_role = { slot = navy_chief }
	}
	if = {
		limit = {
			is_character_slot = high_command
		}
		remove_advisor_role = { slot = high_command }
	}
	if = {
		limit = {
			is_character_slot = theorist
		}
		remove_advisor_role = { slot = theorist }
	}
	if = {
		limit = {
			is_character_slot = political_advisor
		}
		remove_advisor_role = { slot = political_advisor }
	}
}